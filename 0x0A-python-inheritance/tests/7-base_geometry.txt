>>> BaseGeometry = __import__("7-base_geometry").BaseGeometry
>>> name = "Numbers"
>>> value = 37
>>> value1 = 0
>>> value2 = -1
>>> value3 = "Jean"
>>> value4 = None
>>> bg = BaseGeometry()
>>> bg.area()
Traceback (most recent call last):
Exception: area() is not implemented
>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
>>> bg.integer_validator(name, value)
>>> bg.integer_validator(name, value1)
Traceback (most recent call last):
ValueError: Numbers must be greater than 0
>>> bg.integer_validator(name, value2)
Traceback (most recent call last):
ValueError: Numbers must be greater than 0
>>> bg.integer_validator(name, value3)
Traceback (most recent call last):
TypeError: Numbers must be an integer
>>> bg.integer_validator(name, value4)
Traceback (most recent call last):
TypeError: Numbers must be an integer
>>> bg.integer_validator("age")
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'
>>> bg.integer_validator("age", (4,))
Traceback (most recent call last):
TypeError: age must be an integer
>>> bg.integer_validator("age", [3])
Traceback (most recent call last):
TypeError: age must be an integer
>>> bg.integer_validator("age", True)
Traceback (most recent call last):
TypeError: age must be an integer
>>> bg.integer_validator("age", {3, 4})
Traceback (most recent call last):
TypeError: age must be an integer